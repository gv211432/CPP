**Maximum and minimum of an array using minimum number of comparisons

Write a C function to return minimum and maximum in an array. 
Your program should make the minimum number of comparisons. 

This folder contains the way to find out the minum and maximum number form the given array.

This is going to be the best way with low time complexity,

┏┳┓┏━┓╻┏┓╻ ┏━╸┏━┓┏━┓
┃┃┃┣━┫┃┃┗┫ ┃  ┣━┛┣━┛
╹ ╹╹ ╹╹╹ ╹╹┗━╸╹  ╹  

Time Complexity: O(n)

In this method, the total number of comparisons is 1 + 2(n-2) in 
the worst case and 1 + n – 2 in the best case. 
In the above implementation, the worst case occurs when elements 
are sorted in descending order and the best case occurs when elements 
are sorted in ascending order.


┏┳┓┏━╸╺┳╸╻ ╻┏━┓╺┳┓   ┏━┓   ╺┳╸┏━┓╻ ╻┏━┓┏┓╻┏━┓┏┳┓┏━╸┏┓╻╺┳╸   ┏┳┓┏━╸╺┳╸╻ ╻┏━┓╺┳┓
┃┃┃┣╸  ┃ ┣━┫┃ ┃ ┃┃   ┏━┛    ┃ ┃ ┃┃ ┃┣┳┛┃┗┫┣━┫┃┃┃┣╸ ┃┗┫ ┃    ┃┃┃┣╸  ┃ ┣━┫┃ ┃ ┃┃
╹ ╹┗━╸ ╹ ╹ ╹┗━┛╺┻┛   ┗━╸    ╹ ┗━┛┗━┛╹┗╸╹ ╹╹ ╹╹ ╹┗━╸╹ ╹ ╹    ╹ ╹┗━╸ ╹ ╹ ╹┗━┛╺┻┛
Divide the array into two parts and compare the maximums and minimums 
of the two parts to get the maximum and the minimum of the whole array.


Pair MaxMin(array, array_size)
   if array_size = 1
      return element as both max and min
   else if arry_size = 2
      one comparison to determine max and min
      return that pair
   else    /* array_size  > 2 */
      recur for max and min of left half
      recur for max and min of right half
      one comparison determines true max of the two candidates
      one comparison determines true min of the two candidates
      return the pair of max and min